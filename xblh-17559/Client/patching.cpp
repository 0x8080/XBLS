#include "stdafx.h"

namespace xbox {
	namespace System {
		namespace patching {

			VOID SetDashUI() {
				if (global::seting::UseSetDashUI == TRUE) {
					BYTE Color[] = { 0xFF, 0x66, 0x00, 0x66 };
					BYTE SettingsBackground[] = { 0xFF, 0x00, 0x00, 0x00 };
					BYTE DashBackGroundColour[] = { 0xFF, 0x00, 0x00, 0x00 };

					memcpy(SettingsBackground,		global::DASHRESPONSE::Background,	0x04);
					memcpy(DashBackGroundColour,	global::DASHRESPONSE::Background,	0x04);
					memcpy(Color,					global::DASHRESPONSE::Color,		0x04);

					/*DASH TITLES DASH: 17559*/
					xbox::utilities::setMemory((PVOID*)0x92ACAA30, DashBackGroundColour, ARRAYSIZE(DashBackGroundColour));
					xbox::utilities::setMemory((PVOID*)0x92B570E2, DashBackGroundColour, ARRAYSIZE(DashBackGroundColour));
					xbox::utilities::setMemory((PVOID*)0x92C58F28, DashBackGroundColour, ARRAYSIZE(DashBackGroundColour));
					xbox::utilities::setMemory((PVOID*)0x92C72B73, DashBackGroundColour, ARRAYSIZE(DashBackGroundColour));
					xbox::utilities::setMemory((PVOID*)0x92DB07E5, DashBackGroundColour, ARRAYSIZE(DashBackGroundColour));
					xbox::utilities::setMemory((PVOID*)0x92F0E15B, DashBackGroundColour, ARRAYSIZE(DashBackGroundColour));
					xbox::utilities::setMemory((PVOID*)0x92F54622, DashBackGroundColour, ARRAYSIZE(DashBackGroundColour));
					xbox::utilities::setMemory((PVOID*)0x92F5F852, DashBackGroundColour, ARRAYSIZE(DashBackGroundColour));
					xbox::utilities::setMemory((PVOID*)0x92BACFC0, DashBackGroundColour, ARRAYSIZE(DashBackGroundColour));
					xbox::utilities::setMemory((PVOID*)0x92C58F24, DashBackGroundColour, ARRAYSIZE(DashBackGroundColour));
					xbox::utilities::setMemory((PVOID*)0x92F0E16F, DashBackGroundColour, ARRAYSIZE(DashBackGroundColour));
					/*DASH TITLES DASH: 17559*/

					/*Dash and setting Background*/ // 17559
					BYTE Data[0x13];
					xbox::utilities::setMemory((PDWORD)0x92B19236, Data, 0x13);// aura_background nulled

					xbox::utilities::setMemory((PVOID*)0x92B4FDA7, DashBackGroundColour, ARRAYSIZE(DashBackGroundColour));
					xbox::utilities::setMemory((PVOID*)0x92F58323, DashBackGroundColour, ARRAYSIZE(DashBackGroundColour));
					xbox::utilities::setMemory((PVOID*)0x92B4FDAF, DashBackGroundColour, ARRAYSIZE(DashBackGroundColour));
					xbox::utilities::setMemory((PVOID*)0x92B4FDB3, DashBackGroundColour, ARRAYSIZE(DashBackGroundColour));
					/////////////////////////////////////////////////////
					/*Settings background*/
					xbox::utilities::setMemory((PVOID*)0x92B4FE03, SettingsBackground, ARRAYSIZE(SettingsBackground));
					xbox::utilities::setMemory((PVOID*)0x92B4FDB3, SettingsBackground, ARRAYSIZE(SettingsBackground));
					xbox::utilities::setMemory((PVOID*)0x92B4FDAF, SettingsBackground, ARRAYSIZE(SettingsBackground));
					xbox::utilities::setMemory((PVOID*)0x92B4FD9F, SettingsBackground, ARRAYSIZE(SettingsBackground));
					xbox::utilities::setMemory((PVOID*)0x92B4FD93, SettingsBackground, ARRAYSIZE(SettingsBackground));
					xbox::utilities::setMemory((PVOID*)0x92B4FDA3, SettingsBackground, ARRAYSIZE(SettingsBackground));
					xbox::utilities::setMemory((PVOID*)0x92F54632, SettingsBackground, ARRAYSIZE(SettingsBackground));

					xbox::utilities::setMemory((PVOID*)0x92F0E053, SettingsBackground, ARRAYSIZE(SettingsBackground));
					xbox::utilities::setMemory((PVOID*)0x92D5749E, SettingsBackground, ARRAYSIZE(SettingsBackground));
					xbox::utilities::setMemory((PVOID*)0x92D57213, SettingsBackground, ARRAYSIZE(SettingsBackground));
					xbox::utilities::setMemory((PVOID*)0x92D56FAA, SettingsBackground, ARRAYSIZE(SettingsBackground));
					xbox::utilities::setMemory((PVOID*)0x92D56D79, SettingsBackground, ARRAYSIZE(SettingsBackground));
					xbox::utilities::setMemory((PVOID*)0x92D56B48, SettingsBackground, ARRAYSIZE(SettingsBackground));
					xbox::utilities::setMemory((PVOID*)0x92D56926, SettingsBackground, ARRAYSIZE(SettingsBackground));

					xbox::utilities::setMemory((PVOID*)0x92D566BB, SettingsBackground, ARRAYSIZE(SettingsBackground));
					xbox::utilities::setMemory((PVOID*)0x92D1E13C, SettingsBackground, ARRAYSIZE(SettingsBackground));
					xbox::utilities::setMemory((PVOID*)0x92D1DB13, SettingsBackground, ARRAYSIZE(SettingsBackground));
					xbox::utilities::setMemory((PVOID*)0x92CE54F8, SettingsBackground, ARRAYSIZE(SettingsBackground));
					xbox::utilities::setMemory((PVOID*)0x92CC7138, SettingsBackground, ARRAYSIZE(SettingsBackground));
					xbox::utilities::setMemory((PVOID*)0x92CBE9D8, SettingsBackground, ARRAYSIZE(SettingsBackground));
					xbox::utilities::setMemory((PVOID*)0x92C6C662, SettingsBackground, ARRAYSIZE(SettingsBackground));

					xbox::utilities::setMemory((PVOID*)0x92C58F84, SettingsBackground, ARRAYSIZE(SettingsBackground));
					xbox::utilities::setMemory((PVOID*)0x92B95A6D, SettingsBackground, ARRAYSIZE(SettingsBackground));
					xbox::utilities::setMemory((PVOID*)0x92B9524B, SettingsBackground, ARRAYSIZE(SettingsBackground));
					xbox::utilities::setMemory((PVOID*)0x92B55FA9, SettingsBackground, ARRAYSIZE(SettingsBackground));
					xbox::utilities::setMemory((PVOID*)0x92B53D33, SettingsBackground, ARRAYSIZE(SettingsBackground));
					xbox::utilities::setMemory((PVOID*)0x92B4FDAB, SettingsBackground, ARRAYSIZE(SettingsBackground));
					xbox::utilities::setMemory((PVOID*)0x92F58323, SettingsBackground, ARRAYSIZE(SettingsBackground));

					xbox::utilities::setMemory((PVOID*)0x92B4FDA7, SettingsBackground, ARRAYSIZE(SettingsBackground));
					xbox::utilities::setMemory((PVOID*)0x92106CE7, SettingsBackground, ARRAYSIZE(SettingsBackground));
					xbox::utilities::setMemory((PVOID*)0x92B4FDA7, SettingsBackground, ARRAYSIZE(SettingsBackground));

					///////////////////////////////////////////////////
					//* PNG's*/
					xbox::utilities::setMemory((PVOID*)0x92DB07DF, Color, ARRAYSIZE(Color));
					xbox::utilities::setMemory((PVOID*)0x92D2B2EC, Color, ARRAYSIZE(Color));
					xbox::utilities::setMemory((PVOID*)0x92D2B12B, Color, ARRAYSIZE(Color));
					xbox::utilities::setMemory((PVOID*)0x92D2AF9D, Color, ARRAYSIZE(Color));
					xbox::utilities::setMemory((PVOID*)0x92D2ACDC, Color, ARRAYSIZE(Color));
				}
			}

			VOID SetHUDUI() {
				BYTE Color[] = { 0xFF, 0x00, 0x00, 0x00 };
				// Idle
				//xbox::utilities::setMemory((PVOID*)0xC098E638, Color, ARRAYSIZE(Color));
				//xbox::utilities::setMemory((PVOID*)0xC09BAEDE, Color, ARRAYSIZE(Color));
				//xbox::utilities::setMemory((PVOID*)0xC10712EC, Color, ARRAYSIZE(Color));
				//xbox::utilities::setMemory((PVOID*)0xC1073E94, Color, ARRAYSIZE(Color));
				//xbox::utilities::setMemory((PVOID*)0xC1074394, Color, ARRAYSIZE(Color));
				//xbox::utilities::setMemory((PVOID*)0xC10754F4, Color, ARRAYSIZE(Color));
				//xbox::utilities::setMemory((PVOID*)0xC1075F54, Color, ARRAYSIZE(Color));
				//xbox::utilities::setMemory((PVOID*)0xC108A9DC, Color, ARRAYSIZE(Color));
				//xbox::utilities::setMemory((PVOID*)0xC108B910, Color, ARRAYSIZE(Color));
				//xbox::utilities::setMemory((PVOID*)0xC108CB7C, Color, ARRAYSIZE(Color));
				//xbox::utilities::setMemory((PVOID*)0xC108D110, Color, ARRAYSIZE(Color));
				//xbox::utilities::setMemory((PVOID*)0xC10D0AF4, Color, ARRAYSIZE(Color));
				//xbox::utilities::setMemory((PVOID*)0xC1117AE4, Color, ARRAYSIZE(Color));
				//xbox::utilities::setMemory((PVOID*)0xC1197248, Color, ARRAYSIZE(Color));
				//xbox::utilities::setMemory((PVOID*)0xC24D80E2, Color, ARRAYSIZE(Color));

				// Press
				//xbox::utilities::setMemory((PVOID*)0xC09B9F0E, Color, ARRAYSIZE(Color));
				//xbox::utilities::setMemory((PVOID*)0xC0F99000, Color, ARRAYSIZE(Color));
				//xbox::utilities::setMemory((PVOID*)0xC0FA97D8, Color, ARRAYSIZE(Color));
				//xbox::utilities::setMemory((PVOID*)0xC1075F48, Color, ARRAYSIZE(Color));
				//xbox::utilities::setMemory((PVOID*)0xC111ECC0, Color, ARRAYSIZE(Color));
				//xbox::utilities::setMemory((PVOID*)0xC1197278, Color, ARRAYSIZE(Color));
				//xbox::utilities::setMemory((PVOID*)0xC212F16F, Color, ARRAYSIZE(Color));
			}

			unsigned char liverglXam[620] = {
				0x80, 0x04, 0x04, 0x60, 0x00, 0x00, 0x00, 0x01, 0x44, 0x97, 0x00, 0x00,
				0x80, 0x04, 0x04, 0x68, 0x00, 0x00, 0x00, 0x01, 0x07, 0x60, 0x00, 0x00,
				0x81, 0xAB, 0xD3, 0x80, 0x00, 0x00, 0x00, 0x01, 0x38, 0x60, 0x00, 0x01,
				0x81, 0xB4, 0x88, 0x5C, 0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00,
				0x81, 0xB4, 0x88, 0x70, 0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00,
				0x81, 0xAB, 0xD3, 0x34, 0x00, 0x00, 0x00, 0x01, 0x38, 0x60, 0x00, 0x01,
				0x81, 0x73, 0x68, 0x20, 0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00,
				0x81, 0xCB, 0x8B, 0x58, 0x00, 0x00, 0x00, 0x01, 0x38, 0xC0, 0x44, 0x67,
				0x81, 0x74, 0x43, 0x34, 0x00, 0x00, 0x00, 0x01, 0x38, 0xC0, 0x44, 0x67,
				0x81, 0x68, 0xA4, 0xEC, 0x00, 0x00, 0x00, 0x01, 0x78, 0x6F, 0x73, 0x63,
				0x81, 0x68, 0xA5, 0x12, 0x00, 0x00, 0x00, 0x01, 0x78, 0x6F, 0x73, 0x63,
				0x81, 0x72, 0xBD, 0xC8, 0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00,
				0x81, 0x82, 0x0E, 0x4C, 0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00,
				0x81, 0x82, 0x0E, 0x78, 0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00,
				0x81, 0x82, 0x11, 0x20, 0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00,
				0x81, 0xD2, 0x33, 0x50, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
				0x80, 0x0A, 0xF5, 0xCC, 0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00,
				0x80, 0x09, 0xFE, 0x50, 0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00,
				0x81, 0x75, 0xC8, 0xEC, 0x00, 0x00, 0x00, 0x01, 0x48, 0x00, 0x00, 0x10,
				0x81, 0x88, 0x00, 0xB8, 0x00, 0x00, 0x00, 0x02, 0x38, 0x60, 0x00, 0x04,
				0x4B, 0xD7, 0x06, 0x3D, 0x81, 0xD2, 0x75, 0xA4, 0x00, 0x00, 0x00, 0x01,
				0x44, 0x97, 0x00, 0x00, 0x81, 0x82, 0x33, 0x10, 0x00, 0x00, 0x00, 0x02,
				0x60, 0x00, 0x00, 0x00, 0x39, 0x60, 0x44, 0x67, 0x81, 0x7B, 0xE3, 0x60,
				0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00, 0x81, 0x7B, 0xE3, 0x94,
				0x00, 0x00, 0x00, 0x01, 0x48, 0x00, 0x00, 0x48, 0x81, 0x6B, 0x6F, 0x12,
				0x00, 0x00, 0x00, 0x01, 0x37, 0x35, 0x30, 0x32, 0x81, 0x73, 0x42, 0x04,
				0x00, 0x00, 0x00, 0x01, 0x48, 0x00, 0x00, 0x14, 0x81, 0x73, 0x3A, 0xCC,
				0x00, 0x00, 0x00, 0x01, 0x4B, 0xFF, 0xFF, 0x04, 0x81, 0x74, 0x45, 0x9C,
				0x00, 0x00, 0x00, 0x01, 0x2B, 0x3F, 0x44, 0x67, 0x81, 0xAC, 0xCC, 0xE0,
				0x00, 0x00, 0x00, 0x01, 0x48, 0x00, 0x03, 0x58, 0x81, 0x75, 0x67, 0x4C,
				0x00, 0x00, 0x00, 0x01, 0x48, 0x00, 0x00, 0x28, 0x81, 0x7A, 0x80, 0xE8,
				0x00, 0x00, 0x00, 0x01, 0x39, 0x60, 0x00, 0x01, 0x81, 0x7A, 0x81, 0x54,
				0x00, 0x00, 0x00, 0x01, 0x39, 0x60, 0x00, 0x01, 0x81, 0x7A, 0x81, 0x5C,
				0x00, 0x00, 0x00, 0x01, 0x39, 0x60, 0x00, 0x01, 0x81, 0x7A, 0x81, 0x48,
				0x00, 0x00, 0x00, 0x01, 0x39, 0x60, 0x00, 0x01, 0x81, 0x7B, 0x3A, 0x14,
				0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00, 0x81, 0x96, 0xB6, 0x64,
				0x00, 0x00, 0x00, 0x01, 0x48, 0x00, 0x00, 0x38, 0x81, 0x94, 0xF1, 0x64,
				0x00, 0x00, 0x00, 0x01, 0x48, 0x00, 0x00, 0x18, 0x81, 0x96, 0xBB, 0x08,
				0x00, 0x00, 0x00, 0x01, 0x48, 0x00, 0x00, 0x3C, 0x81, 0x78, 0xA5, 0xB0,
				0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF,
				0x81, 0x73, 0xF6, 0x78, 0x00, 0x00, 0x00, 0x07, 0x38, 0x80, 0x00, 0x05,
				0x80, 0x63, 0x00, 0x1C, 0x90, 0x83, 0x00, 0x04, 0x38, 0x80, 0x05, 0x39,
				0x90, 0x83, 0x00, 0x08, 0x38, 0x60, 0x00, 0x00, 0x4E, 0x80, 0x00, 0x20,
				0x81, 0xAE, 0xC1, 0x9C, 0x00, 0x00, 0x00, 0x01, 0x48, 0x00, 0x00, 0x68,
				0x81, 0xAF, 0x91, 0xE4, 0x00, 0x00, 0x00, 0x01, 0x48, 0x00, 0x02, 0xE4,
				0x81, 0xAF, 0x94, 0xF4, 0x00, 0x00, 0x00, 0x0B, 0x60, 0x00, 0x00, 0x00,
				0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
				0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
				0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
				0x48, 0x00, 0x00, 0x1C, 0x81, 0xAE, 0xF7, 0xA8, 0x00, 0x00, 0x00, 0x01,
				0x38, 0x60, 0x00, 0x01, 0x81, 0xAE, 0xC1, 0x9C, 0x00, 0x00, 0x00, 0x01,
				0x48, 0x00, 0x00, 0x64, 0xFF, 0xFF, 0xFF, 0xFF
			};

			unsigned char DevkitP1[208] = {
				0x80, 0x04, 0x04, 0x60, 0x00, 0x00, 0x00, 0x01, 0x44, 0x97, 0x00, 0x00,
				0x80, 0x04, 0x04, 0x68, 0x00, 0x00, 0x00, 0x01, 0x07, 0x60, 0x00, 0x00,
				0x81, 0xAB, 0xD3, 0x80, 0x00, 0x00, 0x00, 0x01, 0x38, 0x60, 0x00, 0x01,
				0x81, 0xB4, 0x88, 0x5C, 0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00,
				0x81, 0xB4, 0x88, 0x70, 0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00,
				0x81, 0xAB, 0xD3, 0x34, 0x00, 0x00, 0x00, 0x01, 0x38, 0x60, 0x00, 0x01,
				0x81, 0x73, 0x68, 0x20, 0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00,
				0x81, 0xCB, 0x8B, 0x58, 0x00, 0x00, 0x00, 0x01, 0x38, 0xC0, 0x44, 0x97,
				0x81, 0x74, 0x43, 0x34, 0x00, 0x00, 0x00, 0x01, 0x38, 0xC0, 0x44, 0x97,
				0x81, 0x68, 0xA4, 0xEC, 0x00, 0x00, 0x00, 0x01, 0x78, 0x6F, 0x73, 0x63,
				0x81, 0x68, 0xA5, 0x12, 0x00, 0x00, 0x00, 0x01, 0x78, 0x6F, 0x73, 0x63,
				0x81, 0x72, 0xBD, 0xC8, 0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00,
				0x81, 0x82, 0x0E, 0x4C, 0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00,
				0x81, 0x82, 0x0E, 0x78, 0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00,
				0x81, 0x82, 0x11, 0x20, 0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00,
				0x81, 0xD2, 0x33, 0x50, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
				0x80, 0x0A, 0xF5, 0xCC, 0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00,
				0xFF, 0xFF, 0xFF, 0xFF
			};

			unsigned char DevkitP2[580] = {
				0x80, 0x09, 0xFE, 0x50, 0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00,
				0x81, 0x75, 0xC8, 0xEC, 0x00, 0x00, 0x00, 0x01, 0x48, 0x00, 0x00, 0x10,
				0x81, 0x88, 0x00, 0xB8, 0x00, 0x00, 0x00, 0x02, 0x38, 0x60, 0x00, 0x04,
				0x4B, 0xD7, 0x06, 0x3D, 0x81, 0xD2, 0x75, 0xA4, 0x00, 0x00, 0x00, 0x01,
				0x44, 0x97, 0x00, 0x00, 0x81, 0x82, 0x33, 0x10, 0x00, 0x00, 0x00, 0x02,
				0x60, 0x00, 0x00, 0x00, 0x39, 0x60, 0x44, 0x97, 0x81, 0x7B, 0xE3, 0x60,
				0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00, 0x81, 0x7B, 0xE3, 0x94,
				0x00, 0x00, 0x00, 0x01, 0x48, 0x00, 0x00, 0x48, 0x81, 0x6B, 0x6F, 0x12,
				0x00, 0x00, 0x00, 0x01, 0x37, 0x35, 0x34, 0x34, 0x81, 0x73, 0x42, 0x04,
				0x00, 0x00, 0x00, 0x01, 0x48, 0x00, 0x00, 0x14, 0x81, 0x73, 0x3A, 0xCC,
				0x00, 0x00, 0x00, 0x01, 0x4B, 0xFF, 0xFF, 0x04, 0x81, 0x74, 0x45, 0x9C,
				0x00, 0x00, 0x00, 0x01, 0x2B, 0x3F, 0x44, 0x97, 0x81, 0xAC, 0xCC, 0xE0,
				0x00, 0x00, 0x00, 0x01, 0x48, 0x00, 0x03, 0x58, 0x81, 0x75, 0x67, 0x4C,
				0x00, 0x00, 0x00, 0x01, 0x48, 0x00, 0x00, 0x28, 0x81, 0x7A, 0x80, 0xE8,
				0x00, 0x00, 0x00, 0x01, 0x39, 0x60, 0x00, 0x01, 0x81, 0x7A, 0x81, 0x54,
				0x00, 0x00, 0x00, 0x01, 0x39, 0x60, 0x00, 0x01, 0x81, 0x7A, 0x81, 0x5C,
				0x00, 0x00, 0x00, 0x01, 0x39, 0x60, 0x00, 0x01, 0x81, 0x7A, 0x81, 0x48,
				0x00, 0x00, 0x00, 0x01, 0x39, 0x60, 0x00, 0x01, 0x81, 0x7B, 0x3A, 0x14,
				0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00, 0x81, 0x96, 0xB6, 0x64,
				0x00, 0x00, 0x00, 0x01, 0x48, 0x00, 0x00, 0x38, 0x81, 0x94, 0xF1, 0x64,
				0x00, 0x00, 0x00, 0x01, 0x48, 0x00, 0x00, 0x18, 0x81, 0x96, 0xBB, 0x08,
				0x00, 0x00, 0x00, 0x01, 0x48, 0x00, 0x00, 0x3C, 0x81, 0x78, 0xA5, 0xB0,
				0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00, 0x80, 0x0A, 0xF8, 0x60,
				0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00, 0x81, 0xAE, 0xC1, 0x9C,
				0x00, 0x00, 0x00, 0x01, 0x48, 0x00, 0x00, 0x68, 0x81, 0xAF, 0x91, 0xE4,
				0x00, 0x00, 0x00, 0x01, 0x48, 0x00, 0x02, 0xE4, 0x81, 0xAF, 0x94, 0xF4,
				0x00, 0x00, 0x00, 0x0B, 0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
				0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
				0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
				0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x1C,
				0x81, 0xAE, 0xF7, 0xA8, 0x00, 0x00, 0x00, 0x01, 0x38, 0x60, 0x00, 0x01,
				0x81, 0xAE, 0xC1, 0x9C, 0x00, 0x00, 0x00, 0x01, 0x48, 0x00, 0x00, 0x64,
				0x81, 0x73, 0x28, 0x50, 0x00, 0x00, 0x00, 0x01, 0x38, 0x60, 0x00, 0x00,
				0x81, 0x77, 0xC1, 0x20, 0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00,
				0x81, 0x77, 0xCB, 0xF0, 0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00,
				0x81, 0x78, 0x3B, 0x98, 0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00,
				0x80, 0x08, 0x9D, 0xC0, 0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00,
				0x80, 0x0A, 0xF8, 0x60, 0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00,
				0x81, 0x77, 0x85, 0x24, 0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00,
				0x81, 0x79, 0x17, 0x2C, 0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00,
				0x81, 0x77, 0x89, 0x9C, 0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00,
				0x81, 0x89, 0xDF, 0x58, 0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00,
				0x81, 0x89, 0xDE, 0x50, 0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00,
				0x80, 0x0A, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00,
				0x81, 0x77, 0x87, 0xBC, 0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00,
				0x81, 0x8A, 0x60, 0xA8, 0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00,
				0x81, 0x72, 0x12, 0xAC, 0x00, 0x00, 0x00, 0x01, 0x38, 0x60, 0x00, 0x01,
				0x81, 0x75, 0xDA, 0x08, 0x00, 0x00, 0x00, 0x01, 0x38, 0x60, 0x00, 0x01,
				0xFF, 0xFF, 0xFF, 0xFF
			};

			BOOL Dev() {
				//-------------------------------------------------------
				*(DWORD*)(0x818DDC9C) = 0x60000000;
				XboxKrnlVersion->Build = 0x4497;
				//-------------------------------------------------------
				xbox::Hvx::HvPokeDWORD(0x8000010000000002, 0x44970000);
				xbox::Hvx::HvPokeDWORD(0x80000102000163E2, 0x44970000);
				//-------------------------------------------------------

				//-------------------------------------------------------
				xbox::utilities::applyPatches(liverglXam);
				xbox::utilities::applyPatches(DevkitP1);
				xbox::utilities::applyPatches(DevkitP2);
				//-------------------------------------------------------
				return TRUE;
			}

			unsigned char pXAM1[88] = {
				0x81, 0x67, 0x98, 0xEC, 0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00,
				0x81, 0x67, 0xC4, 0xB4, 0x00, 0x00, 0x00, 0x01, 0x38, 0x60, 0x00, 0x00,
				0x81, 0x67, 0xF9, 0x78, 0x00, 0x00, 0x00, 0x01, 0x38, 0x60, 0x00, 0x00,
				0x81, 0x68, 0x25, 0x44, 0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00,
				0x81, 0x6D, 0xAC, 0x84, 0x00, 0x00, 0x00, 0x01, 0x38, 0x60, 0x00, 0x06,
				0x81, 0x92, 0xBD, 0xA8, 0x00, 0x00, 0x00, 0x01, 0x38, 0x60, 0x00, 0x00,
				0x81, 0xA3, 0xCD, 0x60, 0x00, 0x00, 0x00, 0x01, 0x38, 0x60, 0x00, 0x01,
				0xFF, 0xFF, 0xFF, 0xFF
			};

			unsigned char pXAM2[172] = {
				0x81, 0x6D, 0xD6, 0x88, 0x00, 0x00, 0x00, 0x01, 0x39, 0x60, 0x00, 0x01,
				0x81, 0x6D, 0xD6, 0xFC, 0x00, 0x00, 0x00, 0x01, 0x39, 0x60, 0x00, 0x01,
				0x81, 0x6D, 0xD6, 0xF4, 0x00, 0x00, 0x00, 0x01, 0x39, 0x60, 0x00, 0x01,
				0x81, 0x6D, 0xD6, 0xE8, 0x00, 0x00, 0x00, 0x01, 0x39, 0x60, 0x00, 0x01,
				0x81, 0x8F, 0x21, 0x30, 0x00, 0x00, 0x00, 0x01, 0x48, 0x00, 0x00, 0xC8,
				0x81, 0x67, 0xC4, 0x7C, 0x00, 0x00, 0x00, 0x01, 0x38, 0x60, 0x00, 0x01,
				0x81, 0x92, 0xBD, 0x24, 0x00, 0x00, 0x00, 0x01, 0x38, 0x60, 0x00, 0x01,
				0x81, 0x92, 0xBD, 0x18, 0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00,
				0x81, 0x6D, 0xCC, 0xC8, 0x00, 0x00, 0x00, 0x01, 0x48, 0x00, 0x00, 0xCC,
				0x81, 0x69, 0xFF, 0x78, 0x00, 0x00, 0x00, 0x01, 0x38, 0x60, 0x00, 0x01,
				0x81, 0x67, 0x10, 0xAC, 0x00, 0x00, 0x00, 0x01, 0x38, 0x60, 0x00, 0x01,
				0x80, 0x07, 0xCD, 0x04, 0x00, 0x00, 0x00, 0x01, 0x38, 0x60, 0x00, 0x01,
				0x80, 0x07, 0xAB, 0x40, 0x00, 0x00, 0x00, 0x01, 0x38, 0x60, 0x00, 0x01,
				0x81, 0x6F, 0xEE, 0x9C, 0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00,
				0xFF, 0xFF, 0xFF, 0xFF
			};

			BOOL RGH() {
				//-------------------------------------------------------
				xbox::utilities::applyPatches(pXAM1);
				//----------------------------------------------------------
				unsigned char bytes0[24] = {
					0x3E, 0xA0, 0x80, 0x04, 0xE9, 0xC7, 0x00, 0x00, 0x54, 0xA5, 0xE1, 0x3F,
					0xEA, 0x07, 0x00, 0x08, 0x3A, 0xB5, 0x61, 0x48, 0x83, 0xA3, 0x01, 0xD0
				};
				xbox::utilities::setMemory((PVOID)0x8011035C, bytes0, 24);
				//-------------------------------------------------------
				//xbox::utilities::applyPatches(pXAM2);
				//-------------------------------------------------------
				xbox::utilities::ComparePointerWrite(0x81682544, 0x60000000);
				xbox::utilities::ComparePointerWrite(0x816798EC, 0x60000000);
				//-------------------------------------------------------
				xbox::utilities::ComparePointerWrite(0x82497EB0, 0x60000000);
				xbox::utilities::ComparePointerWrite(0x8259A65C, 0x60000000);
				xbox::utilities::ComparePointerWrite(0x825C6070, 0x60000000);
				xbox::utilities::ComparePointerWrite(0x822E4DF0, 0x60000000);
				xbox::utilities::ComparePointerWrite(0x8260B178, 0x60000000);
				//-------------------------------------------------------
				xbox::utilities::ComparePointerWrite(0x8167F978, 0x38600000);
				xbox::utilities::ComparePointerWrite(0x8167C4B4, 0x38600000);
				xbox::utilities::ComparePointerWrite(0x8192BDA8, 0x38600000);
				xbox::utilities::ComparePointerWrite(0x81A3CD48, 0x39200000);
				//-------------------------------------------------------
				xbox::utilities::ComparePointerWrite(0x84DC5FE4, 0x00000000);
				xbox::utilities::ComparePointerWrite(0x8414A1D4, 0x00000000);
				//-------------------------------------------------------
				return TRUE;
			}
		}
	}
}




//unsigned char PATCHES2[52] = {
//	0x82, 0x49, 0x7E, 0xB0, 0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00,
//	0x82, 0x59, 0xA6, 0x5C, 0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00,
//	0x82, 0x5B, 0xEA, 0x7C, 0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00,
//	0x82, 0x5C, 0x60, 0x70, 0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00,
//	0xFF, 0xFF, 0xFF, 0xFF
//};

//unsigned char PATCHES3[28] = {
//	0x82, 0x2E, 0x4D, 0xF0, 0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00,
//	0x84, 0xDC, 0x5F, 0xE4, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
//	0xFF, 0xFF, 0xFF, 0xFF
//};

//unsigned char PATCHES4[28] = {
//	0x82, 0x60, 0xB1, 0x78, 0x00, 0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x00,
//	0x84, 0x14, 0xA1, 0xD4, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
//	0xFF, 0xFF, 0xFF, 0xFF
//};